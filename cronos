#!/bin/bash


version=0.21


options () 
{
	help=$(cat <<-TEXT
	Usage:
	    $(basename $0) <time> <options> [-t] <text> 
	    $(basename $0) <time> <options> -c <command> 
	    $(basename $0) <time> <options> -f <script file> 

	Schedule a task or create an alarm
	
	Options:
	 -v, --verbose                  show detailed information
	 -m, --mute                     no sound (not implemented)
	 
	 -t, --text                     text for alarm
	 -c, --command                  command to be executed
	 -f, --file                     script file
	 -s, --script                   same as -f
	 
	 -l, --list                     list all tasks / alarms
	 -r, --remove                   remove an specific task or alarm 
	 -a, --all                      remove all tasks / alarms

	 -h, --help                     display this help
	 -V, --version                  display version
TEXT
)

	case "$1" in
	-V|--version)
	  	echo "$(basename $0) version $version"
	  	return
		;;
	-h|--help)
		echo -e "$help"
		return
		;;
	[0-9][0-9]:[0-9][0-9]|[0-9]:[0-9][0-9])
		local real=$(realpath $0)
		local base=$(dirname $real)
		residente="$base/cronosd"

		case "$2" in
			-c|--command|--cmd)
			nohup $residente "__COMMAND__" "$@" >/dev/null 2>&1 &
			shift
			cat < /tmp/cronosp
			;;
			-f|--file|-s|--script)
			nohup $residente "__SCRIPT__" "$@" >/dev/null 2>&1 &
			shift
			cat < /tmp/cronosp
			;;
			-t|--text)
			nohup $residente "$@" >/dev/null 2>&1 &
			cat < /tmp/cronosp
			;;
			*)
			nohup $residente "$@" >/dev/null 2>&1 &
			cat < /tmp/cronosp
		esac
		;;		
	-l|--list)
		declare -a pids
		pids=( $(pgrep ^cronosd$) )
		
		for pid in ${pids[@]}; do
			echo "$pid"
		done		
		;;
	-a|--all|--clear)
		pkill ^cronosd$
		touch /tmp/cronosq
		;;
	*)		
		if [[ $# -eq 0 ]]; then
			echo -e "$help"
		else
			echo -e "$(basename $0): Unrecognized option '$1'\nTry '$(basename $0) --help' for more information";
		fi 
		return
		;;
	esac
}


# Creo tuberÃ­a nombrada o la limpio
[[ ! -p /tmp/cronosp ]] && mkfifo /tmp/cronosp || (dd if=/tmp/cronosp iflag=nonblock of=/dev/null) >/dev/null 2>&1

# Creo queue
[[ ! -f /tmp/cronoq ]] && touch /tmp/cronoq
 
# Posibilito formato AM / PM
case "$2" in 
	AM)
		p1="$1"
		hh=$(echo $1 | cut -d: -f1)

		[[ $hh -gt 12 ]] && { echo "$(basename $0): invalid time format !"; exit 1; }

		shift 2
		resto="$@"
		params=($p1 ${resto[@]})
		options ${params[@]}
	;;
	PM)
		p1="$1"
		hh=$(echo $1 | cut -d: -f1)
		mm=$(echo $1 | cut -d: -f2)

		[[ $hh -gt 12 ]] && { echo "$(basename $0): invalid time format !"; exit 1; }

		shift 2
		resto="$@"
		params=("$(($hh+12)):$mm" ${resto[@]})

		options ${params[@]}
		;;
	*)
		options "$@"	
esac


