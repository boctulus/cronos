#!/bin/bash

#
# Alarma
#
# Ej de uso:
#
# nohup alarm 16:05 Dragon Ball &  
#
#

tm_ant=5 		# margen inferior
tm_dsp=10		# margen superior
tm_rep=5 		# tiempo para repetición
tm_dismiss=60   # 1 hora

cuando="$1" 
shift
text="$@"


# Hoy o mañana 
now=$(date +%H:%M)

if [[ "$cuando" > "$now" ]]; then
	set -- $(date)
	shift; fecha="$@"
else
	set -- $(date -d "next day")
	shift; fecha="$@"
fi

#echo "$fecha"

t_futuro=$(echo $fecha | awk -v hora="$cuando" '{print $1, $2, hora,  $4, $5}')
date_ant=$(date +"%Y%m%d%H%M" -d "$t_futuro -$tm_ant min")
date_jst=$(date +"%Y%m%d%H%M" -d "$t_futuro")

# Fecha en el futuro
date_dsp=$(date +"%Y%m%d%H%M" -d "$t_futuro +$tm_dsp min") 
      
# Posibilito que la alarma se dispare antes
date_jst=$date_ant

ahora=$(date +"%Y%m%d%H%M"); 

if [[ ! "$ahora" < "$date_jst" ]]; then
	zenity --question \
		    --title="Alarma" \
		    --text "<span foreground=\"#ccc\" font=\"30\">Es para mañana?</span>" \
		    --timeout="$(($tm_dismiss * 60))" \
		    --ok-label="Si" \
		    --cancel-label="No" \
		    --icon-name="clock" \
		  	--window-icon="/usr/share/icons/Mint-X/apps/16/clock.png" \
		  	--height=150 --width=200 \
		    2>/dev/null

	if [[ $? -eq 0 ]]; then
		date_jst=$(date -d  "+1 day -5 min")
		echo Programada para $date_jst
	else 
		zenity --info \
		    --title="Alarma" \
		    --text "<span foreground=\"#ccc\" font=\"30\">Abortando ...</span>" \
		    --timeout=3 \
		    --ok-label="Ok" \
		    --icon-name="clock" \
		  	--window-icon="/usr/share/icons/Mint-X/apps/16/clock.png" \
		  	--height=150 --width=200 \
		    2>/dev/null

		    exit
	fi	
fi	


action () {
	zenity --question \
			    --title="Alarma" \
			    --text "<span foreground=\"#ccc\" font=\"32\">$text</span>" \
			    --timeout="$(($tm_dismiss * 60))" \
			    --ok-label="Cerrar" \
			    --cancel-label="Recordar en 5 min" \
			    --icon-name="clock" \
			  	--window-icon="/usr/share/icons/Mint-X/apps/16/clock.png" \
			    2>/dev/null

	[[ $? -eq 1 ]] && date_jst=$(date +"%Y%m%d%H%M" -d "+$tm_rep min") || exit 0
}

echo \$date_dsp = "$date_dsp"
echo \$date_jst = "$date_jst"

while [[ "$ahora" < "$date_dsp" ]]; do
	while [[ "$ahora" < "$date_jst" ]]; do
		ahora=$(date +"%Y%m%d%H%M")
		echo "Ahora: $(date +"%Y-%m-%d %H:%M") y esperando que sea $date_jst"
		echo "Maximo para ejecucion: $date_dsp"

		if [[ ! "$ahora" < "$date_jst" ]] && [[ "$ahora" < "$date_dsp" ]]; then  
			echo "Siendo $ahora se dispara *** "

			action
		fi

		sleep 59
	done  
done

echo Fin 
exit
	

